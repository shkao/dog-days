 The thought of how to stand out on your machine learning application can be scary if you don't know what to work on or even what you can work on. So in this video, I'll share 6 practical tips which you can get started with right away. In fact, I'll not only share them, but I'll also prove that they have worked in the past by showing other success stories. Now, one obvious tip is to publish a paper at a top-tier conference, but at the end of the video, I'll show you that that doesn't have to be as impossible as you might think. But before we get to writing a whole paper, let's take a step back and look at my favorite tip that, in combination with the next one, made me stand out and helped me get an interview at Google DeepMind. So back in my second year of graduate school, I took a project course where I could choose a reinforcement learning paper from a list. The first task was to thoroughly read the paper and do a presentation on it. This was a lot of fun because I really like reading papers and learn a lot from them, But this time, since I had to explain the work to others, I really got to know the paper. Now, here comes the actual cherry on top. After reading and presenting the paper, I had to reimplement it. Since this paper didn't have published code that came with it, I had to tackle the problem from scratch. Well, not 100% from scratch. I used an existing implementation of PPO and extended it with a technique proposed in the paper I had to reimplement. But you get the point. It was a lot of work. But how do I know whether I understood the paper and implemented it correctly? Well, each paper has experiments and numbers. I could just run the same experiments with my implementation, and if I get the same results, I did everything right. So the tip is to reimplement a paper and recreate its results. This is an amazing project to work on and my favorite, because a you learn a lot, and b it makes you stand out. It showcases that you not only understand the theoretical concepts presented in the paper, but also have the practical skills to implement them. It shows that you know how to run and track experiments and quantify your results. Employers can now see the skills you have and actual outcomes you have achieved, which is even more proof that you are a great candidate. Speaking of employers seeing your skills, this brings me to the next tip to make you stand out, and the last thing I had to do to complete my project course. I had to bundle up all my knowledge I gained, the work I implemented, and the results I achieved into one final blog post, which my advisor could then use to assess and grade my work. See where I'm going? You can easily replace my advisor at college with any employer who wants to assess your skills. Writing blog posts about all your projects is an absolutely amazing and simple way to stand out Do you really think a person will look at your GitHub codes to figure out the details of your project You can really show your work by explaining where you started explain each decision you made, demonstrating the experiments you did, visualizing the results you achieve, and so on. All this helps you learn even more, because all of a sudden, you critically review your own work and find ways of improving it, but also just shows your skills and knowledge. In fact, the majority of my Google DeepMind interview, we chatted about exactly this project and blog post. Because of this post, he could see what I worked on, and we could chat about the results I achieved by looking at graphs and other visualizations and talk about more details. Now, that also means that you don't only have to write blog posts about your projects. You can also write blog posts about the papers you have read. Again, explaining papers to others will teach you a lot, is a record of what you know, and puts you out there into the world for others to find you. For example, a buddy of mine, Rob, who now works at Google DeepMind, was often rejected from DeepMind. But once he did this one thing, he got invited. He put himself out there and contributed to his niche evolutionary reinforcement learning community. In fact, he is one of the main reasons I started writing blog posts. But he not only wrote blog posts about his projects, he also wrote summaries of papers and contributed to open source. He implemented one or two little libraries that provide functionalities specifically for his little evolutionary RL community. Not even because he wanted to stand out by force, but because he was doing research in this niche and wanted to improve his and most importantly the community's experience. To show his work to the world and show the community how useful his library is, he continued with the blog posts and shared a lot of his research on Twitter, until his work got a bit off traction. In raw numbers, it wasn't even all too much. I think his repost stories now have like 300-400 stars, and back then it was even less. But in terms of the size of the community, that was a lot. And part of the people who liked his work, his open source contribution, blog posts and tweets was a researcher from DeepMind, working in his field. This researcher then reached out to Rob, they got along very well, and the researcher helped Rob get an internship in his team at DeepMind, that later got extended to a full-time job. You see, machine learning is already a specific field of research, but machine learning is still very diverse. Contributing even a moderate amount to a specific community can be very very valuable. By contributing to open source, be it your own repository or another public one you not only shine on paper but even more importantly you put yourself out there build connections and again show your work to people Especially when combining with blog posts Let continue with this idea of contributing to the ML community or rather sub I already mentioned writing blog posts about papers you have read. This is effectively a kind of teaching. You are contributing to the community by making complex concepts easier to understand. So how and why should you go even further? Well, it's the same idea as with Rob posting blog posts on his work. To contribute to the community, put yourself out there and show your work. Take a look at our buddy Costa, who does research in reinforcement learning. How can he stand out in the field of RL? Well, we create results from a cool paper. Sure, but that's difficult. Contribute to open source? Yeah, that could be done. Write a blog post about it? Sure. but doing all that at the same time with the purpose of building useful tools for the community can be very difficult. How about we try going down another lane? Let's focus on teaching. That's what Koster did. He re-implemented PPO, a popular reinforcement learning algorithm that is very difficult to implement. But he didn't do that with the goal to replace the commonly used open-source PPO implementation, nor did he contribute to that open-source repository. He focused on teaching. He implemented PPO in a single Python file, making sure to make the implementation as minimal and clear as possible, so that he can teach all the 37 implementation details necessary to get PPO to actually work. I told you implementing it is difficult. And with his implementation, he wrote a corresponding blog post explaining everything in great detail, and even made a little YouTube series explaining his work. This more or less simple contribution to the RL community was so valuable that his videos have like 20 to 30k views on YouTube, and his work is known by many, many researchers. My advisor in my project course knew him, my Google DeepMind interviewer knew him as well, as well as many others. Before he created this work, he was a more or less average researcher, who still had an internship at Weights and Biases, which is in fact where he developed this PPO tutorial. But after this contribution, he got an internship at NVIDIA. So this tip just means, perhaps try to do some sort of teaching. The simplest thing to do is blog posts. You can try to turn your teaching into YouTube videos, and you can try to give smaller talks at college, and make sure to somehow publish your slides, for example, on your own personal website. You can also write educational LinkedIn posts or Twitter or X threads. Again, this is just another tip on how to contribute to the community, show your work, and make you stand out. But do me and yourself a favor and don expect one post to do the magic trick and guarantee a dream job This takes time and your initial teaching will very likely be horrible But keep going But one thing that you can get started with just as easily that is again more on the technical side is working on Kaggle challenges This is a great way to get started and build a track record of your current skill level. Why? Well, the Kaggle ranking system is a direct way of comparing yourself to others. And employers, of course, always want the best of the best. Will you stand out if you have completed the beginner challenges? No. But as just mentioned, don't expect to implement one of these tips and instantly get a dream job. That said, if you can say that you are a Kaggle Grandmaster or Double, Triple or Four Times Grandmaster, you will definitely stand out. Just as Derek, who is now a machine learning engineer at Weights & Biases, or Jiwei, who is a senior data scientist at Nvidia. Kaggle also just gives you a place to work on a project where you can once again demonstrate your skills and document everything in a nice blog post. Once again, giving you more options to stand out. But arguably the most significant way to stand out is of course to publish a paper at a top conference. And before you yell at me, I know you might be thinking, wow, obviously that's a good thing to do, but it's way too difficult, it's pretty much just impossible. And yes, that's true. I mean, this is what top researchers, PhD students or talented graduate students do for a living. It's not perhaps as true as you might think. If you google top AI conferences, you'll find a ranking of the overall machine learning conferences. To get into the top 5 or even 10 is very difficult. But what if I told you you don't have to publish at those conferences? What if I told you you don't need the next attention is all you need paper? Well, let's have a look at my buddy Tim. He published a paper at a top conference, but not one of those 10 in the list you just saw. He published one in the top conference for audio processing. As mentioned, machine learning is a very broad field. There are many sub-fields, like evolutionary reinforcement learning or audio processing. Tim published a paper on classifying the nationality of a baby based on its baby cry. The amazing idea aside, by doing so, guess what happened next? Some big company reached out to him. And which big company might be interested in audio processing research? Amazon, with its Alexa voice assistant. He could then tour the Amazon office here in Berlin and everyone lived happily ever after. That said, publishing a paper still is, arguably, the most difficult, but if done right, most rewarding way to stand out. But again, definitely not the only way. Now, all these tips are great, but when applying to a company, the first thing the recruiters see is the resume. And the resume needs to be on point. So I'm sure this video right here will be perhaps even more helpful than the one you just watched. I dare share 7 tips on how to nail your resume. Bye-bye.

Source URL: https://www.youtube.com/watch?v=iwtd2MK58sE